#!/usr/bin/env ruby

TOTAL_SENTENCES_TO_SHOW = 6

Sentence = Struct.new(:id, :text) do
  def to_s
    text
  end
end

class Sentences
  SENTENCE_REGEX = /(?:^|\.\s*)(?:\s*)([A-Z][^.]+\.)/m

  include Enumerable

  def initialize(text_file)
    text = File.read text_file
    @sentences = text.scan(SENTENCE_REGEX).flatten

    @sentences = @sentences.each_with_index.map do |sentence, id|
      Sentence.new id, sentence
    end
  end

  def each(&b)
    @sentences.each &b
  end

  def quote(starting_id:)
    @sentences.slice(starting_id, TOTAL_SENTENCES_TO_SHOW).join(" ")
  end
end

def random_quote
  format_quote \
    @sentences.quote(starting_id: random_matching_sentence_id)
end

def format_quote(quote)
  remove_line_breaks quote
end

def random_matching_sentence_id
  @matching_sentences[rand @matching_sentences.size].id
end

def remove_line_breaks(text)
  text.gsub("\n", " ").chomp
end

volume = ENV["OVERLORD_TEXT"]
search_term = ARGV[0]

@sentences = Sentences.new volume

@matching_sentences = []
@sentences.each do |sentence|
  @matching_sentences << sentence \
    if search_term.nil? || sentence.text =~ /#{search_term}/i
end
puts "Total matching sentences: #{@matching_sentences.size}"

puts random_quote
